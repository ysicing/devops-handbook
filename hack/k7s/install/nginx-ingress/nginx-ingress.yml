apiVersion: v1
kind: Namespace
metadata:
  name: nginx-ingress

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress 
  namespace: nginx-ingress

---
apiVersion: v1
kind: Secret
metadata:
  name: default-server-secret
  namespace: nginx-ingress
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhRENDQkZDZ0F3SUJBZ0lTQStNeGZpM1pkV1kxTXZ1ZTZDWS8vNFFxTUEwR0NTcUdTSWIzRFFFQkN3VUEKTUVveEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1TTXdJUVlEVlFRRApFeHBNWlhRbmN5QkZibU55ZVhCMElFRjFkR2h2Y21sMGVTQllNekFlRncweE9URXhNall5TXpRMk5UQmFGdzB5Ck1EQXlNalF5TXpRMk5UQmFNQlV4RXpBUkJnTlZCQU1NQ2lvdVoyOWtkUzVrWlhZd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEYUswaHpqQy9nWE9LLytYRm9lMXkwL01KbWxVMTI5VU1rS0RZWApFYXhCZDYydWRoaDQ3TjY5L1kyUE5sVlhOUmJ2WWZSYUtsZnRnVmFsaW50U1lUYjFaVSt0bVlDWjlCSGMwOW1WCk9CT2xZcjYrdXhIK0E4SWUyLzdGakFhM05JMTluOFE0angxR3k5elBZKzczYjhrTFlSNnFrZUdERi81WWNsdDMKTnpFTEFDM1ovQ1B4SjNDRTd5eUY0cDBGSkE0aUdaS2szMEJINnJkU1M3R05MV2JQN2FpTjA4bzZQckM5eEFIQQptajJBYXNIVVlIdGVPRmpLbXo3cVNNdXZvYWIxbTFoNVR5dkpPVkNhSXI3Rkh1cytRWFpoN1czSmVKM2pFcllBCnFxZlNRREs3VjVneW9TK2NqK3piT3N0Sk9BQVRSSG50VUNUZEZCV25GdlV6aXRXbEFnTUJBQUdqZ2dKN01JSUMKZHpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwpNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZEc01na3JhTE1RMFNvamdiQ05wNmN6aC9HL1ZNQjhHCkExVWRJd1FZTUJhQUZLaEthbU1FZmQyNjV0RTV0NlpGWmUvenFPeWhNRzhHQ0NzR0FRVUZCd0VCQkdNd1lUQXUKQmdnckJnRUZCUWN3QVlZaWFIUjBjRG92TDI5amMzQXVhVzUwTFhnekxteGxkSE5sYm1OeWVYQjBMbTl5WnpBdgpCZ2dyQmdFRkJRY3dBb1lqYUhSMGNEb3ZMMk5sY25RdWFXNTBMWGd6TG14bGRITmxibU55ZVhCMExtOXlaeTh3Ck1RWURWUjBSQkNvd0tJSUtLaTVuYjJSMUxtUmxkb0lRS2k1c2IyTmhiQzVuYjJSMUxtUmxkb0lJWjI5a2RTNWsKWlhZd1RBWURWUjBnQkVVd1F6QUlCZ1puZ1F3QkFnRXdOd1lMS3dZQkJBR0MzeE1CQVFFd0tEQW1CZ2dyQmdFRgpCUWNDQVJZYWFIUjBjRG92TDJOd2N5NXNaWFJ6Wlc1amNubHdkQzV2Y21jd2dnRUVCZ29yQmdFRUFkWjVBZ1FDCkJJSDFCSUh5QVBBQWR3RHdsYVJaOGdEUmdrQVFMUytUaUk2dFMvNGRSK09aNGRBMHByQ29xbzZ5Y3dBQUFXNnEKVXpjUkFBQUVBd0JJTUVZQ0lRQ0hMaDdHeERDMGV6ZzI0cDc2ME5zWnVUY0lQeXE3bFdzYzFTRGNtRnVIVEFJaApBSXdWVTQrU1JqN1BLYjAxaVlhYnk0bXRsZEpPVUZ5TWIxZU5PQXlWQzI5V0FIVUFCN2RjRytWOWFQL3hzTVlkCkl4WEh1dVpYZkZlVXQycnV2R0U2R21uVG9od0FBQUZ1cWxNM1ZnQUFCQU1BUmpCRUFpQSs3Q21MVDRJQlNQZEEKQlQ2T2h4VkphTzZoOWJnTVRtVGhkczd2WTN2S3VBSWdaT1U1M1NjWlV4V2hxUzFrc0VLejdHRHlucVdmVXhkKwpxUDA2c0hsQ0xic3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQjdCUTc5T1h3SHRLSG5RTkllREJRSS9wTytTCjJFWU5ONXd2aU54ZlVHV3hoVTkvTXdvb0FwYlNKdkdFcUpHQm1QNU5YK1NaaVQ1ZTRpdXVSTThuUlgwQVNxN2wKVWpyNEJjQzdPTWRwcllKZDQwZGt2TWkzT3FIY1RSczd3V2RaV1FHZTF2c3MvOHMvY3ZuWWkxNFY1OWUwN1FOZwpWSEZIdWRjZ3V4SFhXMHB1ZWdWNFpGOThXVnAyZHhwYmFFa0Y4VXI0bjlNdnY2a3lxTVZQR0kxUFhYY05Fc1NsClJEWnpkamtxb0gybGtXVlpDbjRHd2hJZlhOb1ZSVTlOcUtxR2x0ZGwrY09sUHBXTEJJbjNDN0RkQ2prbVJtT0wKWjJabFlaUlNXVkRaUWZ4YWNjNnN3RndxRVhHVkxRTGNnQytQYU9sdzI5NUgxeDRTa3BEZTRoVG1Xdm89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFa2pDQ0EzcWdBd0lCQWdJUUNnRkJRZ0FBQVZPRmMyb0xoZXluQ0RBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRFMk1ETXhOekUyTkRBME5sb1hEVEl4TURNeE56RTJOREEwTmxvdwpTakVMTUFrR0ExVUVCaE1DVlZNeEZqQVVCZ05WQkFvVERVeGxkQ2R6SUVWdVkzSjVjSFF4SXpBaEJnTlZCQU1UCkdreGxkQ2R6SUVWdVkzSjVjSFFnUVhWMGFHOXlhWFI1SUZnek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQW5OTU04RnJsTGtlM2NsMDNnN05vWXpEcTF6VW1HU1hodmI0MThYQ1NMN2U0UzBFRgpxNm1lTlFoWTdMRXF4R2lIQzZQamRlVG04NmRpY2JwNWdXQWYxNUdhbi9QUWVHZHh5R2tPbFpIUC91YVo2V0E4ClNNeCt5azEzRWlTZFJ4dGE2N25zSGpjQUhKeXNlNmNGNnM1SzY3MUI1VGFZdWN2OWJUeVdhTjhqS2tLUURJWjAKWjhoL3BacTRVbUVVRXo5bDZZS0h5OXY2RGxiMmhvbnpoVCtYaHErdzNCcnZhdzJWRm4zRUs2QmxzcGtFTm5XQQphNnhLOHh1UVNYZ3ZvcFpQS2lBbEtRVEdkTURRTWMyUE1UaVZGcnFvTTdoRDhiRWZ3ekIvb25reEV6MHROdmpqCi9QSXphcms1TWNXdnhJME5IV1FXTTZyNmhDbTIxQXZBMkgzRGt3SURBUUFCbzRJQmZUQ0NBWGt3RWdZRFZSMFQKQVFIL0JBZ3dCZ0VCL3dJQkFEQU9CZ05WSFE4QkFmOEVCQU1DQVlZd2Z3WUlLd1lCQlFVSEFRRUVjekJ4TURJRwpDQ3NHQVFVRkJ6QUJoaVpvZEhSd09pOHZhWE55Wnk1MGNuVnpkR2xrTG05amMzQXVhV1JsYm5SeWRYTjBMbU52CmJUQTdCZ2dyQmdFRkJRY3dBb1l2YUhSMGNEb3ZMMkZ3Y0hNdWFXUmxiblJ5ZFhOMExtTnZiUzl5YjI5MGN5OWsKYzNSeWIyOTBZMkY0TXk1d04yTXdId1lEVlIwakJCZ3dGb0FVeEtleHBIc3NjZnJiNFV1UWRmL0VGV0NGaVJBdwpWQVlEVlIwZ0JFMHdTekFJQmdabmdRd0JBZ0V3UHdZTEt3WUJCQUdDM3hNQkFRRXdNREF1QmdnckJnRUZCUWNDCkFSWWlhSFIwY0RvdkwyTndjeTV5YjI5MExYZ3hMbXhsZEhObGJtTnllWEIwTG05eVp6QThCZ05WSFI4RU5UQXoKTURHZ0w2QXRoaXRvZEhSd09pOHZZM0pzTG1sa1pXNTBjblZ6ZEM1amIyMHZSRk5VVWs5UFZFTkJXRE5EVWt3dQpZM0pzTUIwR0ExVWREZ1FXQkJTb1NtcGpCSDNkdXViUk9iZW1SV1h2ODZqc29UQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBM1RQWEVmTmpXRGpkR0JYN0NWVytkbGE1Y0VpbGFVY25lOElrQ0pMeFdoOUtFaWszSkhSUkhHSm8KdU0yVmNHZmw5NlM4VGloUnpadm9yb2VkNnRpNldxRUJtdHp3M1dvZGF0ZytWeU9lcGg0RVlwci8xd1hLdHg4Lwp3QXBJdkpTd3RtVmk0TUZVNWFNcXJTREU2ZWE3M01qMnRjTXlvNWpNZDZqbWVXVUhLOHNvL2pvV1VvSE9VZ3d1Clg0UG8xUVl6KzNkc3prRHFNcDRma2x4QndYUnNXMTBLWHpQTVRaK3NPUEF2ZXl4aW5kbWprVzhsR3krUXNSbEcKUGZaK0c2WjZoN21qZW0wWStpV2xrWWNWNFBJV0wxaXdCaThzYUNiR1M1ak4ycDhNK1grUTdVTktFa1JPYjNONgpLT3FrcW01N1RIMkgzZURKQWtTbmg2L0RORnUwUWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMml0SWM0d3Y0Rnppdi9seGFIdGN0UHpDWnBWTmR2VkRKQ2cyRnhHc1FYZXRybllZCmVPemV2ZjJOanpaVlZ6VVc3MkgwV2lwWDdZRldwWXA3VW1FMjlXVlByWm1BbWZRUjNOUFpsVGdUcFdLK3Zyc1IKL2dQQ0h0dit4WXdHdHpTTmZaL0VPSThkUnN2Y3oyUHU5Mi9KQzJFZXFwSGhneGYrV0hKYmR6Y3hDd0F0MmZ3ago4U2R3aE84c2hlS2RCU1FPSWhtU3BOOUFSK3EzVWt1eGpTMW16KzJvamRQS09qNnd2Y1FCd0pvOWdHckIxR0I3ClhqaFl5cHMrNmtqTHI2R205WnRZZVU4cnlUbFFtaUsreFI3clBrRjJZZTF0eVhpZDR4SzJBS3FuMGtBeXUxZVkKTXFFdm5JL3MyenJMU1RnQUUwUjU3VkFrM1JRVnB4YjFNNHJWcFFJREFRQUJBb0lCQVFDL2kwN1IrOXV3N1h3NwpOa01HaTRDS2Vud25XcUFuZUJBWnQ2QTl3c3Rzc3lsdXljcVVxTXFySGVqaU9yN1VrUXp3NFJ5SzZUQkhtczI3CkM0bFllM2VvSGVuRnJjYkY1QTZteGV6N1lMK0c3ZG93Vk1mb0w5NkgvM2lBY244VzdISHBRSk1qWVN0QUZBNXEKbXYrY2lLMkhheDVrZlMzMFRlV0dPK2pvRXpIZ3lBaytTOUVOSkJnOWM3YnIzNUF1UTNwVXlpOTNRNnFaUVdITwpMQi9od1pxK1FKelZLOEMrQ2tRYUd3eURRM0hKeDF1NlNNdnFCNFRuMVc1blBPcWFCaDJFR1dWTGtHenpLY3E3CnJWTlYxeExTcFpIcXlhZ0h2TVBoUFdRTW9UOHh4QW44aWVlYWJVVzFGQlY4UDc3SmJjTnd4NnlNamxkSVo0RzMKYTNhTjR4TmxBb0dCQVBTdE1tekZ4V1F3R2xDSVJ6cmk1b0FTQURScXQrMktHbUVuVFJ6T25qdHFralVmRVpIUwp4Yml5c0RpMVFtbnAyT1oxQlZmWmRZUWRiYlM0UkZnSGcyQXBrZVJGRDN6V1VaMDhhbGIvQ1hpL2lmUDBhbllZCk5CWi9ER1k4QXpReFJ5SVE2SktHOFh2TFEydGNhWWtqZjBKUzRBUEgxOEdUZHMvdGVyYjRFNE5mQW9HQkFPUkUKQ2ZwQ0s4SUR3bGhBd3FmaVNqQVpsMThhQlc0ZUVrYjdBcmZ3RHZPV0d1U3RrSmNpOUpzYmpta0VTN2wrTEtRTQpmejRseDA2UmhUdE15bjVMZnpycjJDYXNYQU5wMkhRdm5Rd2xxS0svVVJ3Um8yOFE1aFY1ZVF1TzNlL1RzbHNUClNIRmcrT0xQL0w1SmcvZXROWmdSdDlIR2xXYkpKVmxwc3I4K0w2bDdBb0dCQUxNRGFPbzJSSFpKejJidVhoY1MKWFl5RUh3dzZyRGtxR3FUTVNWbnpQY2ZBOEJuWGtsWTdmSmZtZkpIdzVCZHpsVkwvZVJwT0t2R3ZTazIzcDZFMApWZ1ZzUktaYmRMcGtYN0FIdk5ITHBOVm9aZmxMOFB4WU52dmlsbUxTTTVIakgrVW5zOUZJMDdNOEF5YXdwVEpGCisxeStIOUlFUzdJQVB5UmYzckd4alMxSEFvR0FWazR2WTVMZlRwVHpSMEQ5R0ZMajcvbk5GT1VXeG9MU01FbzUKeGVnYkR4aGpCTEZuS08zTGhGWFA2MzczVHFRWkp0R2V6cFdrSE4zQ2ZTQlVzNW5CK2pvdjJMZDBkc252VUVhcwpYMnBocjE4Y3dMc2VpeURkamFNSEZFcXBPVU5XZlQ3Mk5nQVBPbHFmV2ljYm9XcTVCODB6TGpxaVJHR3JJSHBwClhndWFJNzhDZ1lCaUtFTklyTlBaRktKNXNIK1F6NGF0K0VzeVFnM3B0eDdOS3E3ZHZzSSs1N2FaZFlBWDhhd0sKSjNFNElZRFlMVWplc2xCTVAwNkRtUDVlLzdVb0g0ZGxtNjNuVXg0R25mcEdqSlRhdjRPUVNlOCtWaUNUeDFqOQpMQytsaUlsK210ZDQxMVExREdBZXVaZnJQRy9KUWxxU1lkU094aWxwbHQ5ZmJ5OGFQSlROTHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
  namespace: nginx-ingress
data:
  server-names-hash-bucket-size: "1024"
  proxy-protocol: "True"
  real-ip-header: "X-Real-IP"
  set-real-ip-from: "0.0.0.0/0"
  client-max-body-size: "20m"

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: virtualservers.k8s.nginx.org
spec:
  group: k8s.nginx.org
  versions:
  - name: v1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: virtualservers
    singular: virtualserver
    kind: VirtualServer
    shortNames:
    - vs
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: virtualserverroutes.k8s.nginx.org
spec:
  group: k8s.nginx.org
  versions:
  - name: v1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: virtualserverroutes
    singular: virtualserverroute
    kind: VirtualServerRoute
    shortNames:
    - vsr
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: nginx-ingress
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "extensions"
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - k8s.nginx.org
  resources:
  - virtualservers
  - virtualserverroutes
  verbs:
  - list
  - watch
  - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: nginx-ingress
subjects:
- kind: ServiceAccount
  name: nginx-ingress
  namespace: nginx-ingress
roleRef:
  kind: ClusterRole
  name: nginx-ingress
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
spec:
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
    spec:
      serviceAccountName: nginx-ingress
      containers:
      - image: nginx/nginx-ingress:1.6.0
        name: nginx-ingress
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: prometheus
          containerPort: 9113
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 101 #nginx
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
          - -v=3 # Enables extensive logging. Useful for troubleshooting.
          - -report-ingress-status
         #- -external-service=nginx-ingress
         #- -enable-leader-election
          - -enable-prometheus-metrics