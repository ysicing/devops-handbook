name: deloy ysicing.me
on:
  push:
    branches:
    - master
  schedule:
    - cron: '0 5 */3 * *'

jobs:
  build:
    name: build & deploy
    runs-on: 	ubuntu-latest
    steps:
    - uses: actions/checkout@v13
    - name: Login GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCRIO }}
    - name: Login Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn install
    - name: build
      run: |
          sed -i "s#wiki.ysicing.me#ysicing.me#g" docusaurus.config.js
          yarn build
          docker build -t ysicing/devops-handbook:ysicing.me -f scripts/caddy/ysicing.me/Dockerfile .
          docker push ysicing/devops-handbook:ysicing.me
          docker tag ysicing/devops-handbook:ysicing.me ghcr.io/ysicing/devops-handbook:ysicing.me
          docker push ghcr.io/ysicing/devops-handbook:ysicing.me

    - name: deploy
      uses: peaceiris/actions-gh-pages@v2
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./public
