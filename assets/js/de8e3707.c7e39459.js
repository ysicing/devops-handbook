"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[689],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return v}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var s=r.createContext({}),l=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=l(n.components);return r.createElement(s.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,s=n.parentName,p=c(n,["components","mdxType","originalType","parentName"]),u=l(t),v=i,g=u["".concat(s,".").concat(v)]||u[v]||d[v]||o;return t?r.createElement(g,a(a({ref:e},p),{},{components:t})):r.createElement(g,a({ref:e},p))}));function v(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=u;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=n,c.mdxType="string"==typeof n?n:i,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},21983:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var r=t(83117),i=t(80102),o=(t(67294),t(3905)),a=["components"],c={title:"Containerd \u4f7f\u7528\u6559\u7a0b",date:new Date("2021-09-13T09:16:45.000Z"),description:"\u672c\u6587\u4e3b\u8981\u63cf\u8ff0Containerd\u7684\u5b89\u88c5\u53ca\u4f7f\u7528\u59ff\u52bf\u3002",tags:["containerd","cri"]},s=void 0,l={permalink:"/posts/getting-started-with-containerd",source:"@site/blog/posts/getting-started-with-containerd.md",title:"Containerd \u4f7f\u7528\u6559\u7a0b",description:"\u672c\u6587\u4e3b\u8981\u63cf\u8ff0Containerd\u7684\u5b89\u88c5\u53ca\u4f7f\u7528\u59ff\u52bf\u3002",date:"2021-09-13T09:16:45.000Z",formattedDate:"2021\u5e749\u670813\u65e5",tags:[{label:"containerd",permalink:"/tags/containerd"},{label:"cri",permalink:"/tags/cri"}],readingTime:1.3566666666666667,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Containerd \u4f7f\u7528\u6559\u7a0b",date:"2021-09-13T09:16:45.000Z",description:"\u672c\u6587\u4e3b\u8981\u63cf\u8ff0Containerd\u7684\u5b89\u88c5\u53ca\u4f7f\u7528\u59ff\u52bf\u3002",tags:["containerd","cri"]},prevItem:{title:"\u90e8\u7f72\u4e00\u7ad9\u5f0f\u8f7b\u76d1\u63a7\u8f7b\u8fd0\u7ef4\u7cfb\u7edf\u54ea\u5412\u76d1\u63a7\u9b54\u6539\u7248\u91d1\u5412\u76d1\u63a7",permalink:"/posts/nezha-ops-monitor"},nextItem:{title:"\u90e8\u7f72Kubernetes Dashboard",permalink:"/posts/k8s-kubernetes-dashboard-install"}},p={authorsImageUrls:[]},d=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u914d\u7f6e\u6587\u4ef6",id:"\u914d\u7f6e\u6587\u4ef6",level:2},{value:"\u9ad8\u7ea7\u914d\u7f6e",id:"\u9ad8\u7ea7\u914d\u7f6e",level:3},{value:"\u955c\u50cf\u52a0\u901f",id:"\u955c\u50cf\u52a0\u901f",level:4},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:4}],u={toc:d};function v(n){var e=n.components,t=(0,i.Z)(n,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u9ed8\u8ba4\u672c\u6587\u6f14\u793a\u73af\u5883\u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"Debian GNU/Linux 11 (bullseye)"))),(0,o.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,o.kt)("p",null,"containerd\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u4e24\u4e2a\u538b\u7f29\u5305"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"containerd-1.5.5-linux-amd64.tar.gz")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cri-containerd-cni-1.5.5-linux-amd64.tar.gz"),", \u5305\u542b\u4e86runc\u548c\u4f5c\u4e3ak8s\u5bb9\u5668\u8fd0\u884c\u65f6\u6240\u9700\u7684cni\u6587\u4ef6")),(0,o.kt)("p",null,"\u9ed8\u8ba4\u6211\u4eec\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u538b\u7f29\u5305",(0,o.kt)("inlineCode",{parentName:"p"},"cri-containerd-cni-1.5.5-linux-amd64.tar.gz"),",\u9664\u975e\u672c\u5730\u6d4b\u8bd5\u4f7f\u7528\u7b2c\u4e00\u4e2a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# \u4ecegithub\u4e0b\u8f7d\nwget https://github.com/containerd/containerd/releases/download/v1.5.5/cri-containerd-cni-1.5.5-linux-amd64.tar.gz\n# \u89e3\u538b\ntar -C / -xzf cri-containerd-cni-1.5.5-linux-amd64.tar.gz\n# \u5f00\u542f\u542f\u52a8\nsystemctl enable containerd.service\n# \u542f\u52a8\nsystemctl start containerd\n")),(0,o.kt)("p",null,"\u67e5\u770b\u7248\u672c\u4fe1\u606f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ctr version\nClient:\n  Version:  v1.5.5\n  Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0\n  Go version: go1.16.6\n\nServer:\n  Version:  v1.5.5\n  Revision: 72cec4be58a9eb6b2910f5d10f1c01ca47d231c0\n  UUID: 6a851001-a5f3-4722-94c4-38e2916eb44c\n")),(0,o.kt)("h2",{id:"\u914d\u7f6e\u6587\u4ef6"},"\u914d\u7f6e\u6587\u4ef6"),(0,o.kt)("p",null,"Containerd \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/containerd/config.toml"),", \u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u751f\u6210\u9ed8\u8ba4\u914d\u7f6e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"containerd config default > /etc/containerd/config.toml\n")),(0,o.kt)("h3",{id:"\u9ad8\u7ea7\u914d\u7f6e"},"\u9ad8\u7ea7\u914d\u7f6e"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u5229\u7528containerd\u63d2\u4ef6\u673a\u5236")),(0,o.kt)("p",null,"\u67e5\u770b\u76ee\u524d\u652f\u6301\u7684\u63d2\u4ef6 ",(0,o.kt)("inlineCode",{parentName:"p"},"ctr plugins ls")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ctr plugins ls\nTYPE                            ID                       PLATFORMS      STATUS\nio.containerd.content.v1        content                  -              ok\nio.containerd.snapshotter.v1    aufs                     linux/amd64    skip\nio.containerd.snapshotter.v1    btrfs                    linux/amd64    skip\nio.containerd.snapshotter.v1    devmapper                linux/amd64    error\nio.containerd.snapshotter.v1    native                   linux/amd64    ok\nio.containerd.snapshotter.v1    overlayfs                linux/amd64    ok\nio.containerd.snapshotter.v1    zfs                      linux/amd64    skip\nio.containerd.metadata.v1       bolt                     -              ok\nio.containerd.differ.v1         walking                  linux/amd64    ok\nio.containerd.gc.v1             scheduler                -              ok\nio.containerd.service.v1        introspection-service    -              ok\nio.containerd.service.v1        containers-service       -              ok\nio.containerd.service.v1        content-service          -              ok\nio.containerd.service.v1        diff-service             -              ok\nio.containerd.service.v1        images-service           -              ok\nio.containerd.service.v1        leases-service           -              ok\nio.containerd.service.v1        namespaces-service       -              ok\nio.containerd.service.v1        snapshots-service        -              ok\nio.containerd.runtime.v1        linux                    linux/amd64    ok\nio.containerd.runtime.v2        task                     linux/amd64    ok\nio.containerd.monitor.v1        cgroups                  linux/amd64    ok\nio.containerd.service.v1        tasks-service            -              ok\nio.containerd.internal.v1       restart                  -              ok\nio.containerd.grpc.v1           containers               -              ok\nio.containerd.grpc.v1           content                  -              ok\nio.containerd.grpc.v1           diff                     -              ok\nio.containerd.grpc.v1           events                   -              ok\nio.containerd.grpc.v1           healthcheck              -              ok\nio.containerd.grpc.v1           images                   -              ok\nio.containerd.grpc.v1           leases                   -              ok\nio.containerd.grpc.v1           namespaces               -              ok\nio.containerd.internal.v1       opt                      -              ok\nio.containerd.grpc.v1           snapshots                -              ok\nio.containerd.grpc.v1           tasks                    -              ok\nio.containerd.grpc.v1           version                  -              ok\nio.containerd.grpc.v1           cri                      linux/amd64    ok\n")),(0,o.kt)("h4",{id:"\u955c\u50cf\u52a0\u901f"},"\u955c\u50cf\u52a0\u901f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'# \u53c2\u8003\u6587\u6863 https://github.com/containerd/containerd/blob/main/docs/cri/registry.md\n[plugins."io.containerd.grpc.v1.cri".registry]\n  [plugins."io.containerd.grpc.v1.cri".registry.mirrors]\n    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]\n      endpoint = ["https://registry-1.docker.io"]\n    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."test.https-registry.io"]\n      endpoint = ["https://HostIP1:Port1"]\n    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."test.http-registry.io"]\n      endpoint = ["http://HostIP2:Port2"]\n    # wildcard matching is supported but not required.\n    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."*"]\n      endpoint = ["https://HostIP3:Port3"]\n  [plugins."io.containerd.grpc.v1.cri".registry.configs]\n    [plugins."io.containerd.grpc.v1.cri".registry.configs."gcr.io".auth]\n      username = "_json_key"\n      password = \'paste output from jq\'\n')),(0,o.kt)("h4",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,o.kt)("p",null,"\u793a\u4f8bcontainerd\u914d\u7f6e\u6587\u4ef6 ",(0,o.kt)("a",{parentName:"p",href:"https://sh.ysicing.me/k8s/cri/containerd.config.toml"},"config.toml")))}v.isMDXComponent=!0}}]);