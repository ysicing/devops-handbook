"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6169],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return h}});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),p=i,h=u["".concat(s,".").concat(p)]||u[p]||m[p]||r;return t?a.createElement(h,o(o({ref:n},d),{},{components:t})):a.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},22531:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=t(87462),i=t(63366),r=(t(67294),t(3905)),o=["components"],l={title:"Lima\u865a\u62df\u673a\u521d\u4f53\u9a8c\u4e00",date:new Date("2021-09-05T02:16:57.000Z"),description:"Intel Mac\u4e0a\u4f7f\u7528Lima\u8fd0\u884cDebian\u865a\u62df\u673a",tags:["vm","debian","macOS"]},s=void 0,c={permalink:"/posts/lima-vm-on-macOS",source:"@site/blog/posts/lima-vm-on-macOS.md",title:"Lima\u865a\u62df\u673a\u521d\u4f53\u9a8c\u4e00",description:"Intel Mac\u4e0a\u4f7f\u7528Lima\u8fd0\u884cDebian\u865a\u62df\u673a",date:"2021-09-05T02:16:57.000Z",formattedDate:"2021\u5e749\u67085\u65e5",tags:[{label:"vm",permalink:"/tags/vm"},{label:"debian",permalink:"/tags/debian"},{label:"macOS",permalink:"/tags/mac-os"}],readingTime:5.39,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Lima\u865a\u62df\u673a\u521d\u4f53\u9a8c\u4e00",date:"2021-09-05T02:16:57.000Z",description:"Intel Mac\u4e0a\u4f7f\u7528Lima\u8fd0\u884cDebian\u865a\u62df\u673a",tags:["vm","debian","macOS"]},prevItem:{title:"Lima\u865a\u62df\u673a\u521d\u4f53\u9a8c\u4e8c",permalink:"/posts/lima-vm-on-macOS-M1"},nextItem:{title:"Debian11\u914d\u7f6eLocales",permalink:"/posts/debian11-locales"}},d={authorsImageUrls:[]},u=[{value:"\u4ec0\u4e48\u662fLima",id:"\u4ec0\u4e48\u662flima",level:2},{value:"\u529f\u80fd",id:"\u529f\u80fd",level:4},{value:"\u5feb\u901f\u5f00\u59cb",id:"\u5feb\u901f\u5f00\u59cb",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:4},{value:"Debian\u81ea\u5b9a\u4e49\u914d\u7f6e",id:"debian\u81ea\u5b9a\u4e49\u914d\u7f6e",level:4},{value:"\u542f\u52a8lima\u865a\u62df\u673a",id:"\u542f\u52a8lima\u865a\u62df\u673a",level:4},{value:"\u5bb9\u5668\u4f7f\u7528",id:"\u5bb9\u5668\u4f7f\u7528",level:2},{value:"\u8fd0\u884c\u5bb9\u5668",id:"\u8fd0\u884c\u5bb9\u5668",level:4},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:2},{value:"\u9644\u5f55",id:"\u9644\u5f55",level:2},{value:"\u914d\u7f6e\u8bf4\u660e",id:"\u914d\u7f6e\u8bf4\u660e",level:4}],m={toc:u},p="wrapper";function h(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)(p,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u4ec0\u4e48\u662flima"},"\u4ec0\u4e48\u662fLima"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Linux virtual machines on macOS")),(0,r.kt)("p",null,"\u5373\u4e13\u6ce8\u4e8e\u5728macOS\u4e0a\u652f\u6301\u6587\u4ef6\u5171\u4eab\u3001\u7aef\u53e3\u8f6c\u53d1\u548c\u4f7f\u7528 containerd \u7684 Linux \u865a\u62df\u673a, \u5176\u8bde\u751f\u7684\u521d\u8877\u662f\u63a8\u5e7f\u5728macOS\u4e0a\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"containerd"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"nerdctl")),(0,r.kt)("h4",{id:"\u529f\u80fd"},"\u529f\u80fd"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301\u81ea\u52a8\u6587\u4ef6\u5171\u4eab"),(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301\u7aef\u53e3\u8f6c\u53d1"),(0,r.kt)("li",{parentName:"ul"},"\u5185\u7f6e\u652f\u6301",(0,r.kt)("inlineCode",{parentName:"li"},"containerd")),(0,r.kt)("li",{parentName:"ul"},"\u57fa\u4e8eQEMU\u652f\u6301 ",(0,r.kt)("inlineCode",{parentName:"li"},"Intel on Intel"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ARM on Intel"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ARM on ARM"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Intel on ARM")),(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301Linux\u53d1\u884c\u7248\u5e38\u89c1\u90fd\u53ef\u4ee5,\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"Debian"))),(0,r.kt)("h2",{id:"\u5feb\u901f\u5f00\u59cb"},"\u5feb\u901f\u5f00\u59cb"),(0,r.kt)("h4",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Intel Mac\nbrew install lima\n")),(0,r.kt)("h4",{id:"debian\u81ea\u5b9a\u4e49\u914d\u7f6e"},"Debian\u81ea\u5b9a\u4e49\u914d\u7f6e"),(0,r.kt)("p",null,"\u751f\u6210debian\u914d\u7f6e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'cat > ./debian.yml<<EOF\narch: "default"\nimages:\n  - location: "~/hack/iso/debian-11-generic-amd64-20210814-734.qcow2"\n    arch: "x86_64"\n  - location: "https://cloud.debian.org/images/cloud/bullseye/20210814-734/debian-11-generic-amd64-20210814-734.qcow2"\n    arch: "x86_64"\ncpus: 2\nmemory: "4GiB"\ndisk: "100GiB"\nmounts:\n  - location: "~"\n    writable: false\n  - location: "/tmp/lima"\n    writable: true\nssh:\n  localPort: 60024\nprovision:\n  - mode: system\n    script: |\n      #!/bin/bash\n      echo "/usr/local/bin/nerdctl \\$@" > /usr/local/bin/docker\n      chmod +x /usr/local/bin/docker\n  - mode: system\n    script: |\n      #!/bin/bash\n      nerdctl run --rm -v /usr/local/bin:/sysdir registry.cn-beijing.aliyuncs.com/k7scn/tools tar zxf /pkg.tgz -C /sysdir\nprobes:\n- script: |\n    #!/bin/bash\n    set -eux -o pipefail\n    if ! timeout 120s bash -c "until test -f /usr/local/bin/dps; do sleep 3; done"; then\n            echo >&2 "tools is not installed yet"\n            exit 0\n    fi\nEOF\n')),(0,r.kt)("p",null,"\u6216\u8005"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://sh.ysicing.me/lima/debian.yml\n")),(0,r.kt)("h4",{id:"\u542f\u52a8lima\u865a\u62df\u673a"},"\u542f\u52a8lima\u865a\u62df\u673a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'limactl start ./debian.yml\n\n? Creating an instance "debian"  [Use arrows to move, type to filter]\n> Proceed with the default configuration\n  Open an editor to override the configuration\n  Exit\n\n? Creating an instance "debian" Proceed with the default configuration\nINFO[0000] Downloading "https://github.com/containerd/nerdctl/releases/download/v0.11.1/nerdctl-full-0.11.1-linux-amd64.tar.gz" (sha256:ce7a6e119b03c3fb8ded3d46d929962fd17417bea1d5bbc07e0fce49494d8a09)\nINFO[0000] Using cache "/Users/ysicing/Library/Caches/lima/download/by-url-sha256/3304d173f1e1824e5be6cf84bf2f78825cf0db416c4c975dbb2458776942629e/data"\nINFO[0001] Attempting to download the image from "~/hack/iso/debian-11-generic-amd64-20210814-734.qcow2"\nINFO[0002] Downloaded image from "~/hack/iso/debian-11-generic-amd64-20210814-734.qcow2"\nINFO[0002] [hostagent] Starting QEMU (hint: to watch the boot progress, see "/Users/ysicing/.lima/debian/serial.log")\nINFO[0002] SSH Local Port: 60024\nINFO[0002] [hostagent] Waiting for the essential requirement 1 of 4: "ssh"\nINFO[0020] [hostagent] The essential requirement 1 of 4 is satisfied\nINFO[0020] [hostagent] Waiting for the essential requirement 2 of 4: "sshfs binary to be installed"\nINFO[0029] [hostagent] The essential requirement 2 of 4 is satisfied\nINFO[0029] [hostagent] Waiting for the essential requirement 3 of 4: "/etc/fuse.conf to contain \\"user_allow_other\\""\nINFO[0044] [hostagent] The essential requirement 3 of 4 is satisfied\nINFO[0044] [hostagent] Waiting for the essential requirement 4 of 4: "the guest agent to be running"\nINFO[0044] [hostagent] The essential requirement 4 of 4 is satisfied\nINFO[0044] [hostagent] Mounting "/Users/ysicing"\nINFO[0044] [hostagent] Mounting "/tmp/lima"\nINFO[0045] [hostagent] Waiting for the optional requirement 1 of 2: "systemd must be available"\nINFO[0045] [hostagent] Forwarding "/run/user/501/lima-guestagent.sock" (guest) to "/Users/ysicing/.lima/debian/ga.sock" (host)\nINFO[0045] [hostagent] The optional requirement 1 of 2 is satisfied\nINFO[0045] [hostagent] Waiting for the optional requirement 2 of 2: "containerd binaries to be installed"\nINFO[0045] [hostagent] Not forwarding TCP [::]:22\nINFO[0045] [hostagent] Not forwarding TCP 0.0.0.0:22\nINFO[0045] [hostagent] The optional requirement 2 of 2 is satisfied\nINFO[0045] READY. Run `limactl shell debian` to open the shell.\n')),(0,r.kt)("p",null,"\u5982\u679c\u8fc7\u7a0b\u5931\u8d25\u4e86, \u8bf7\u68c0\u67e5yaml\u4e2d\u7684\u7aef\u53e3\u914d\u7f6e ",(0,r.kt)("inlineCode",{parentName:"p"},"ssh.localPort"),", \u8f83\u5927\u6982\u7387\u662f\u7aef\u53e3\u51b2\u7a81\u4e86\n\u5982\u679c\u63d0\u793a",(0,r.kt)("inlineCode",{parentName:"p"},"READY"),", \u5219\u8868\u793a\u865a\u62df\u673a\u5df2\u7ecfok"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"08:08 \u279c  hack limactl shell debian\ndebian\nysicing@lima-debian:/Users/ysicing/hack$\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"limactl shell debian uname -a\nLinux lima-debian 5.10.0-8-amd64 #1 SMP Debian 5.10.46-4 (2021-08-03) x86_64 GNU/Linux\n")),(0,r.kt)("h2",{id:"\u5bb9\u5668\u4f7f\u7528"},"\u5bb9\u5668\u4f7f\u7528"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5b9a\u5236\u540e\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u65e0\u7f1d\u4f7f\u7528docker\u547d\u4ee4")),(0,r.kt)("h4",{id:"\u8fd0\u884c\u5bb9\u5668"},"\u8fd0\u884c\u5bb9\u5668"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# \u7c7b\u4f3cdocker run\nlimactl shell debian nerdctl run -d --name nginx -p 127.0.0.1:8080:80 nginx:alpine\n# \u7c7b\u578bdocker ps\nlimactl shell debian nerdctl ps                                                    \nCONTAINER ID    IMAGE                             COMMAND                   CREATED           STATUS    PORTS                     NAMES\n8b877fa8e942    docker.io/library/nginx:alpine    "/docker-entrypoint.\u2026"    10 seconds ago    Up        127.0.0.1:8080->80/tcp    nginx\n')),(0,r.kt)("p",null,"\u6216\u8005"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'limactl shell debian docker run -d --name nginx -p 127.0.0.1:8080:80 nginx:alpine\nlimactl shell debian docker ps                                                    \nCONTAINER ID    IMAGE                             COMMAND                   CREATED           STATUS    PORTS                     NAMES\n8b877fa8e942    docker.io/library/nginx:alpine    "/docker-entrypoint.\u2026"    10 seconds ago    Up        127.0.0.1:8080->80/tcp    nginx\nlimactl shell debian dps                                                \nCONTAINER ID    IMAGE                             COMMAND                   CREATED           STATUS    PORTS                     NAMES\n8b877fa8e942    docker.io/library/nginx:alpine    "/docker-entrypoint.\u2026"    10 seconds ago    Up        127.0.0.1:8080->80/tcp    nginx\n')),(0,r.kt)("p",null,"\u6d4f\u89c8\u5668\u8bbf\u95ee",(0,r.kt)("a",{parentName:"p",href:"http://127.0.0.1:8080%E6%98%BE%E7%A4%BAnginx%E9%BB%98%E8%AE%A4%E9%9D%99%E6%80%81%E9%A1%B5"},"http://127.0.0.1:8080\u663e\u793anginx\u9ed8\u8ba4\u9759\u6001\u9875")),(0,r.kt)("h2",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528root\u7528\u6237")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo password root\nsu root\n")),(0,r.kt)("h2",{id:"\u9644\u5f55"},"\u9644\u5f55"),(0,r.kt)("h4",{id:"\u914d\u7f6e\u8bf4\u660e"},"\u914d\u7f6e\u8bf4\u660e"),(0,r.kt)("p",null,"lima\u9ed8\u8ba4\u914d\u7f6e, \u9ed8\u8ba4\u5728\u5f53\u524d\u7528\u6237",(0,r.kt)("inlineCode",{parentName:"p"},"~/.lima/default/lima.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# /Users/ysicing/.lima/default/lima.yaml\n# ===================================================================== #\n# BASIC CONFIGURATION\n# ===================================================================== #\n\n# Arch: "default", "x86_64", "aarch64".\n# "default" corresponds to the host architecture.\narch: "default"\n\n# An image must support systemd and cloud-init.\n# Ubuntu and Fedora are known to work.\n# Default: none (must be specified)\nimages:\n  # Try to use a local image first.\n  - location: "~/Downloads/hirsute-server-cloudimg-amd64.img"\n    arch: "x86_64"\n  - location: "~/Downloads/hirsute-server-cloudimg-arm64.img"\n    arch: "aarch64"\n\n  # Download the file from the internet when the local file is missing.\n  # Hint: run `limactl prune` to invalidate the "current" cache\n  - location: "https://cloud-images.ubuntu.com/hirsute/current/hirsute-server-cloudimg-amd64.img"\n    arch: "x86_64"\n  - location: "https://cloud-images.ubuntu.com/hirsute/current/hirsute-server-cloudimg-arm64.img"\n    arch: "aarch64"\n\n# CPUs: if you see performance issues, try limiting cpus to 1.\n# Default: 4\ncpus: 2\n\n# Memory size\n# Default: "4GiB"\nmemory: "4GiB"\n\n# Disk size\n# Default: "100GiB"\ndisk: "100GiB"\n\n# Expose host directories to the guest\n# Default: none\nmounts:\n  - location: "~"\n    # CAUTION: `writable` SHOULD be false for the home directory.\n    # Setting `writable` to true is possible, but untested and dangerous.\n    writable: false\n  - location: "/tmp/lima"\n    writable: true\n\nssh:\n  # A localhost port of the host. Forwarded to port 22 of the guest.\n  # Currently, this port number has to be specified manually.\n  # Default: none\n  localPort: 60022\n  # Load ~/.ssh/*.pub in addition to $LIMA_HOME/_config/user.pub .\n  # This option is useful when you want to use other SSH-based\n  # applications such as rsync with the Lima instance.\n  # If you have an insecure key under ~/.ssh, do not use this option.\n  # Default: true\n  loadDotSSHPubKeys: true\n\n# ===================================================================== #\n# ADVANCED CONFIGURATION\n# ===================================================================== #\n\ncontainerd:\n  # Enable system-wide (aka rootful)  containerd and its dependencies (BuildKit, Stargz Snapshotter)\n  # Default: false\n  system: false\n  # Enable user-scoped (aka rootless) containerd and its dependencies\n  # Default: true\n  user: true\n\n# Provisioning scripts need to be idempotent because they might be called\n# multiple times, e.g. when the host VM is being restarted.\n# provision:\n#   # `system` is executed with the root privilege\n#   - mode: system\n#     script: |\n#       #!/bin/bash\n#       set -eux -o pipefail\n#       export DEBIAN_FRONTEND=noninteractive\n#       apt-get install -y vim\n#   # `user` is executed without the root privilege\n#   - mode: user\n#     script: |\n#       #!/bin/bash\n#       set -eux -o pipefail\n#       cat <<EOF > ~/.vimrc\n#       set number\n#       EOF\n\n# probes:\n#  # Only `readiness` probes are supported right now.\n#  - mode: readiness\n#    description: vim to be installed\n#    script: |\n#       #!/bin/bash\n#       set -eux -o pipefail\n#       if ! timeout 30s bash -c "until command -v vim; do sleep 3; done"; then\n#         echo >&2 "vim is not installed yet"\n#         exit 1\n#       fi\n#    hint: |\n#      vim was not installed in the guest. Make sure the package system is working correctly.\n#      Also see "/var/log/cloud-init-output.log" in the guest.\n\n# ===================================================================== #\n# FURTHER ADVANCED CONFIGURATION\n# ===================================================================== #\n\nfirmware:\n  # Use legacy BIOS instead of UEFI.\n  # Default: false\n  legacyBIOS: false\n\nvideo:\n  # QEMU display, e.g., "none", "cocoa", "sdl".\n  # As of QEMU v5.2, enabling this is known to have negative impact\n  # on performance on macOS hosts: https://gitlab.com/qemu-project/qemu/-/issues/334\n  # Default: "none"\n  display: "none"\n\nnetwork:\n  # The instance can get routable IP addresses from the vmnet framework using\n  # https://github.com/lima-vm/vde_vmnet. Both vde_switch and vde_vmnet\n  # daemons must be running before the instance is started. The interface type\n  # (host, shared, or bridged) is configured in vde_vmnet and not lima.\n  vde:\n    # vnl (virtual network locator) points to the vde_switch socket directory,\n    # optionally with vde:// prefix\n    # - vnl: "vde:///var/run/vde.ctl"\n    #   # VDE Switch port number (not TCP/UDP port number). Set to 65535 for PTP mode.\n    #   # Default: 0\n    #   switchPort: 0\n    #   # MAC address of the instance; lima will pick one based on the instance name,\n    #   # so DHCP assigned ip addresses should remain constant over instance restarts.\n    #   macAddress: ""\n    #   # Interface name, defaults to "vde0", "vde1", etc.\n    #   name: ""\n\n# Port forwarding rules. Forwarding between ports 22 and ssh.localPort cannot be overridden.\n# Rules are checked sequentially until the first one matches.\n# portForwards:\n#   - guestPort: 443\n#     hostIP: "0.0.0.0" # overrides the default value "127.0.0.1"; allows privileged port forwarding\n#   # default: hostPort: 443 (same as guestPort)\n#   # default: guestIP: "127.0.0.1" (also matches bind addresses "0.0.0.0", "::", and "::1")\n#   # default: proto: "tcp" (only valid value right now)\n#   - guestPortRange: [4000, 4999]\n#     hostIP:  "0.0.0.0" # overrides the default value "127.0.0.1"\n#   # default: hostPortRange: [4000, 4999] (must specify same number of ports as guestPortRange)\n#   - guestPort: 80\n#     hostPort: 8080 # overrides the default value 80\n#   - guestIP: "127.0.0.2" # overrides the default value "127.0.0.1"\n#     hostIP: "127.0.0.2" # overrides the default value "127.0.0.1"\n#   # default: guestPortRange: [1024, 65535]\n#   # default: hostPortRange: [1024, 65535]\n#   - guestPort: 8888\n#     ignore: true (don\'t forward this port)\n#   # Lima internally appends this fallback rule at the end:\n#   - guestIP: "127.0.0.1"\n#     guestPortRange: [1024, 65535]\n#     hostIP: "127.0.0.1"\n#     hostPortRange: [1024, 65535]\n#   # Any port still not matched by a rule will not be forwarded (ignored)\n')))}h.isMDXComponent=!0}}]);