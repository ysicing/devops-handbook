"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5869],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||c;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<c;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},52461:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var n=r(83117),o=r(80102),c=(r(67294),r(3905)),a=["components"],i={title:"Etcd\u4f7f\u7528\u5165\u95e8",date:new Date("2020-05-31T11:54:36.000Z"),description:"Etcd\u4f7f\u7528\u5165\u95e8",author:"ysicing",tags:["etcd"]},l=void 0,s={permalink:"/posts/etcd-op",source:"@site/blog/posts/etcd-op.md",title:"Etcd\u4f7f\u7528\u5165\u95e8",description:"Etcd\u4f7f\u7528\u5165\u95e8",date:"2020-05-31T11:54:36.000Z",formattedDate:"2020\u5e745\u670831\u65e5",tags:[{label:"etcd",permalink:"/tags/etcd"}],readingTime:.68,hasTruncateMarker:!0,authors:[{name:"ysicing"}],frontMatter:{title:"Etcd\u4f7f\u7528\u5165\u95e8",date:"2020-05-31T11:54:36.000Z",description:"Etcd\u4f7f\u7528\u5165\u95e8",author:"ysicing",tags:["etcd"]},prevItem:{title:"\u5f00\u6e90k8slb\u5de5\u5177Metallb",permalink:"/posts/k8s-slb-metallb"},nextItem:{title:"\u5728k8s\u4e2d\u4f7f\u7528docker in docker",permalink:"/posts/docker-in-k8s"}},p={authorsImageUrls:[void 0]},u=[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",level:2},{value:"\u4f7f\u7528helm\u5b89\u88c5etcd",id:"\u4f7f\u7528helm\u5b89\u88c5etcd",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"\u7b80\u4ecb"},"\u7b80\u4ecb"),(0,c.kt)("p",null,"etcd\u662fCoreOS\u56e2\u961f\u53d1\u8d77\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684\u5206\u5e03\u5f0f\u952e\u503c(key-value)\u6570\u636e\u5e93\u3002etcd\u5185\u90e8\u91c7\u7528raft\u534f\u8bae\u4f5c\u4e3a\u4e00\u81f4\u6027\u7b97\u6cd5\uff0cetcd\u57fa\u4e8eGo\u8bed\u8a00\u5b9e\u73b0\u3002"),(0,c.kt)("p",null,"etcd\u6bd4\u8f83\u591a\u7684\u5e94\u7528\u573a\u666f\u662f\u7528\u4e8e\u670d\u52a1\u53d1\u73b0\u3002"),(0,c.kt)("h2",{id:"\u4f7f\u7528helm\u5b89\u88c5etcd"},"\u4f7f\u7528helm\u5b89\u88c5etcd"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'# \u67e5\u8be2\nhelm search repo etcd\n\nNAME                    CHART VERSION   APP VERSION     DESCRIPTION                                       \nbitnami/etcd            4.8.2           3.4.9           etcd is a distributed key value store that prov...\nincubator/etcd          0.7.4           3.2.26          Distributed reliable key-value store for the mo...\nstable/etcd-operator    0.10.3          0.9.4           CoreOS etcd-operator Helm chart for Kubernetes    \nstable/zetcd            0.1.9           0.0.3           CoreOS zetcd Helm chart for Kubernetes  \n\n# \u4e0b\u8f7dhelm\u5305,\u6267\u884c\u5b9a\u5236\nhelm pull bitnami/etcd\n\n# \u4f7f\u7528nodeport, \u7981\u7528rbac\uff0c\u7981\u7528\u5b58\u50a8\nhelm install etcd bitnami/etcd --set service.type=NodePort --set service.type=NodePort --set auth.rbac.enabled=false --set persistence.enabled=false -n ops-open\n\nexport NODE_IP=$(kubectl get nodes --namespace ops-open -o jsonpath="{.items[0].status.addresses[0].address}")\nexport NODE_PORT=$(kubectl get --namespace ops-open -o jsonpath="{.spec.ports[0].nodePort}" services etcd)\nexport ETCDURL=http://$NODE_IP:$NODE_PORT\necho "etcd URL: $ETCDURL"\nexport ECTDCTL_API=3\netcdctl member list --endpoints=$ETCDURL\n')))}m.isMDXComponent=!0}}]);