<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>安装 on 运维指南</title><link>https://ysicing.me/tags/%E5%AE%89%E8%A3%85/</link><description>Recent content in 安装 on 运维指南</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>root@ysicing.net (ysicing)</managingEditor><webMaster>root@ysicing.net (ysicing)</webMaster><copyright>©{year}, All Rights Reserved</copyright><lastBuildDate>Mon, 18 May 2020 22:55:18 +0800</lastBuildDate><atom:link href="https://ysicing.me/tags/%E5%AE%89%E8%A3%85/index.xml" rel="self" type="application/rss+xml"/><item><title>docker快速安装</title><link>https://ysicing.me/posts/docker-install/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/docker-install/</guid><description>安装 curl -fsSL https://ysicing.me/hack/docker/install.sh | bash 或者 ergo install docker -h 做了如下设置 1 2 3 4 5 6 7 8 9 10 11 12 13 { &amp;#34;exec-opts&amp;#34;: [&amp;#34;native.cgroupdriver=systemd&amp;#34;], &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://reg-mirror.qiniu.com&amp;#34;,&amp;#34;https://dyucrs4l.mirror.aliyuncs.com&amp;#34;,&amp;#34;https://dockerhub.azk8s.cn&amp;#34;], &amp;#34;bip&amp;#34;: &amp;#34;169.254.0.1/24&amp;#34;, &amp;#34;max-concurrent-downloads&amp;#34;: 10, &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;, &amp;#34;log-level&amp;#34;: &amp;#34;warn&amp;#34;, &amp;#34;log-opts&amp;#34;: { &amp;#34;max-size&amp;#34;: &amp;#34;20m&amp;#34;, &amp;#34;max-file&amp;#34;: &amp;#34;2&amp;#34; }, &amp;#34;storage-driver&amp;#34;: &amp;#34;overlay2&amp;#34; } docker常用工具安装 docker run --rm</description><dc:creator>ysicing</dc:creator><category>docker</category><category>安装</category><category>docker</category></item><item><title>minikube安装k8s</title><link>https://ysicing.me/posts/k8s-minikube-install/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/k8s-minikube-install/</guid><description>minikube安装k8s MacOS安装 1 brew install minikube 1 2 # PROXY可以根据自己需要设置，可不设置 minikube start --cpus=2 --memory 4g --disk-size=40g --driver=virtualbox --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers --nodes=2 --docker-env HTTP_PROXY=http://192.168.99.1:7890 --docker-env HTTPS_PROXY=http://192.168.99.1:7890 --docker-env NO_PROXY=127.0.0.1/32,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost</description><dc:creator>ysicing</dc:creator><category>kubernetes</category><category>安装</category><category>kubernetes</category></item><item><title>NFS存储</title><link>https://ysicing.me/posts/nfs-install-k8s/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/nfs-install-k8s/</guid><description>NFS存储 Debian # 安装 apt update apt install -y nfs-kernel-server # 配置 mkdir /k8sdata echo &amp;quot;/k8sdata/ *(insecure,rw,sync,no_root_squash,no_subtree_check)&amp;quot; &amp;gt; /etc/exports # 启动nfs systemctl enable rpcbind systemctl enable nfs-server systemctl start rpcbind systemctl start nfs-server exportfs -r # 测试 showmount -e 127.0.0.1 CentOS # 安装nfs yum install -y nfs-utils # 配置共享目录 mkdir</description><dc:creator>ysicing</dc:creator><category>kubernetes</category><category>安装</category><category>kubernetes</category></item><item><title>sealos安装k8s</title><link>https://ysicing.me/posts/sealos-install-k8s/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/sealos-install-k8s/</guid><description>推荐使用sealos, 一键高可用，简单上手, 安装k8s 1.18.2版本 准备工作 虚拟机 环境: 3台机器(debian/buster, 11.11.11.111~11.11.11.113, 2核4G8</description><dc:creator>ysicing</dc:creator><category>kubernetes</category><category>安装</category><category>kubernetes</category></item><item><title>初始化Debian</title><link>https://ysicing.me/posts/debian-init/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/debian-init/</guid><description>初始化Debian 基础环境配置和安装docker配置 all.yaml: 系统+docker docker.yaml: 安装docker init.yaml: 系统 命令行工具 仅使用debian系统 ergo init debian -h 宿主</description><dc:creator>ysicing</dc:creator><category>debian</category><category>安装</category><category>debian</category></item><item><title>在线重装Debian</title><link>https://ysicing.me/posts/debian-reinstall/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/debian-reinstall/</guid><description>背景 一条命令快速重装干净的Linux环境 目前仅支持Debian(不会不打算支持其他系统) 基于萌咖大佬的二次魔改 默认做了 默认root密码 vag</description><dc:creator>ysicing</dc:creator><category>debian</category><category>安装</category><category>debian</category></item><item><title>安装golang</title><link>https://ysicing.me/posts/go-install/</link><pubDate>Mon, 18 May 2020 22:55:18 +0800</pubDate><author>root@ysicing.net (ysicing)</author><atom:modified>Mon, 18 May 2020 22:55:18 +0800</atom:modified><guid>https://ysicing.me/posts/go-install/</guid><description>主要是用于linux安装 安装,配置 1 2 3 4 5 6 7 8 9 10 11 12 13 # 下载 wget https://dl.google.com/go/go1.13.6.linux-amd64.tar.gz # 解压 tar -C /usr/local -xzf go1.13.3.linux-amd64.tar.gz # 配置 .bashrc export GO111MODULE=on export GOPROXY=https://goproxy.cn export GOPATH=&amp;#34;/root/go&amp;#34; export GOBIN=&amp;#34;$GOPATH/bin&amp;#34; export PATH=$PATH:$GOBIN:/usr/local/go/bin source .bashrc # 验证 go env 一键脚本 1 curl</description><dc:creator>ysicing</dc:creator><category>go</category><category>安装</category><category>go</category></item></channel></rss>