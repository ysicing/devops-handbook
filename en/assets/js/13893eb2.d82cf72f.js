"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7092],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return k}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(t),k=a,d=m["".concat(l,".").concat(k)]||m[k]||u[k]||s;return t?r.createElement(d,i(i({ref:n},p),{},{components:t})):r.createElement(d,i({ref:n},p))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},93148:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var r=t(83117),a=t(80102),s=(t(67294),t(3905)),i=["components"],o={title:"\u5728TKE\u4e0a\u4f7f\u7528Traefik Ingress",date:new Date("2022-01-10T13:08:31.000Z"),description:"\u672c\u6587\u4e3b\u8981\u8bb2\u8ff0\u5728tke\u4e0a\u90e8\u7f72traefik ingress",tags:["ingress","kubernetes","tke","traefik"]},l=void 0,c={permalink:"/en/posts/tke-traefik-ingress",source:"@site/blog/posts/tke-traefik-ingress.md",title:"\u5728TKE\u4e0a\u4f7f\u7528Traefik Ingress",description:"\u672c\u6587\u4e3b\u8981\u8bb2\u8ff0\u5728tke\u4e0a\u90e8\u7f72traefik ingress",date:"2022-01-10T13:08:31.000Z",formattedDate:"January 10, 2022",tags:[{label:"ingress",permalink:"/en/tags/ingress"},{label:"kubernetes",permalink:"/en/tags/kubernetes"},{label:"tke",permalink:"/en/tags/tke"},{label:"traefik",permalink:"/en/tags/traefik"}],readingTime:4.59,hasTruncateMarker:!0,authors:[],frontMatter:{title:"\u5728TKE\u4e0a\u4f7f\u7528Traefik Ingress",date:"2022-01-10T13:08:31.000Z",description:"\u672c\u6587\u4e3b\u8981\u8bb2\u8ff0\u5728tke\u4e0a\u90e8\u7f72traefik ingress",tags:["ingress","kubernetes","tke","traefik"]},prevItem:{title:"CaddyV1\u5347\u7ea7\u5230V2\u7248\u672c",permalink:"/en/posts/caddy-v1-upgrade-v2"},nextItem:{title:"Tke\u96c6\u7fa4\u57fa\u4e8eCFS\u52a8\u6001\u521b\u5efa\u4e0d\u540c\u5b50\u76ee\u5f55\u7684pvc",permalink:"/en/posts/tke-cfs-nfs-client"}},p={authorsImageUrls:[]},u=[{value:"\u524d\u63d0\u6761\u4ef6",id:"\u524d\u63d0\u6761\u4ef6",level:2},{value:"\u5b89\u88c5traefik",id:"\u5b89\u88c5traefik",level:3},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2}],m={toc:u};function k(e){var n=e.components,t=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Traefik\u662f\u4e00\u6b3e\u4f18\u79c0\u7684\u8fb9\u7f18\u8def\u7531\u5de5\u5177\uff0c\u517c\u5bb9\u6240\u6709\u4e3b\u6d41\u7684\u96c6\u7fa4\u6280\u672f\u3002")),(0,s.kt)("p",null,"\u5177\u4f53\u5982\u4e0b\u7279\u6027:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u539f\u751f\u652f\u6301\u670d\u52a1\u53d1\u73b0\u3001\u52a8\u6001\u914d\u7f6e\uff0c\u53ef\u4ee5\u81ea\u52a8watch\u540e\u7aef\u53d8\u5316\u540c\u6b65\u5230\u8d1f\u8f7d\u5747\u8861\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u652f\u6301\u7075\u6d3b\u914d\u7f6e\u53ef\u89c2\u6027",(0,s.kt)("inlineCode",{parentName:"p"},"logs"),"\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"metrics"),"\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"tracing"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u63d0\u4f9bdashboard\u529f\u80fd")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u62e5\u6709\u4e30\u5bcc\u7684\u9ad8\u7ea7\u7279\u6027: \u7070\u5ea6\u53d1\u5e03\u3001\u6d41\u91cf\u590d\u5236\u3001\u4e2d\u95f4\u4ef6\u3001https\u7b49\u3002"))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u672c\u6587\u4e3b\u8981\u5df2\u6700\u65b0\u7a33\u5b9a\u7248\u672c ",(0,s.kt)("inlineCode",{parentName:"p"},"2.5.6"),"\u4e3a\u4f8b\u8bb2\u8ff0\u5728tke\u96c6\u7fa4\u4e2d\u5b89\u88c5traefik\uff0c\u540e\u7eed\u5173\u4e8etraefik\u90fd\u5df2\u672c\u7248\u672c\u4e3a\u4f8b")),(0,s.kt)("h2",{id:"\u524d\u63d0\u6761\u4ef6"},"\u524d\u63d0\u6761\u4ef6"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5df2\u7ecfready\u96c6\u7fa4\u7684tke\u96c6\u7fa4\u6216\u8005k3s\u96c6\u7fa4,(\u540e\u9762\u4f1a\u7b80\u5355\u8bf4\u4e0bk3s\u5355\u8282\u70b9\u96c6\u7fa4\u5b89\u88c5)"),(0,s.kt)("li",{parentName:"ul"},"\u5df2\u914d\u7f6e\u597d",(0,s.kt)("inlineCode",{parentName:"li"},"kubectl")),(0,s.kt)("li",{parentName:"ul"},"\u5df2\u5b89\u88c5",(0,s.kt)("inlineCode",{parentName:"li"},"helm")),(0,s.kt)("li",{parentName:"ul"},"\u5df2\u5b89\u88c5 ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/ysicing/ergo"},"ergo"))),(0,s.kt)("h3",{id:"\u5b89\u88c5traefik"},"\u5b89\u88c5traefik"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u6dfb\u52a0traefik helm\u4ed3\u5e93")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add traefik https://helm.traefik.io/traefik\nhelm repo update\n# \u4e0b\u8f7dhelm\u5305\u5e76\u89e3\u538b\nhelm pull traefik/traefik --untar \n")),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"tke\u96c6\u7fa4\u51c6\u5907\u4e00\u4e2a\u95f2\u7f6e\u7684slb\uff0c\u83b7\u53d6slbid\u5f85\u7528")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u5b89\u88c5",(0,s.kt)("inlineCode",{parentName:"p"},"jaeger-operator")))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create namespace observability\nergo ops wget  https://github.com/jaegertracing/jaeger-operator/releases/download/v1.29.0/jaeger-operator.yaml\nkubectl create -f /root/.ergo/tmp/jaeger-operator.yaml -n observability\n")),(0,s.kt)("ol",{start:4},(0,s.kt)("li",{parentName:"ol"},"\u5b89\u88c5",(0,s.kt)("inlineCode",{parentName:"li"},"jaegertracing")," all-in-one")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u6d4b\u8bd5\u4f7f\u7528\uff0c\u751f\u4ea7\u4f7f\u7528\u53ef\u8003\u8651\u9ad8\u53ef\u7528\u90e8\u7f72")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: jaegertracing.io/v1\nkind: Jaeger\nmetadata:\n  name: simplest\n  namespace: observability\nspec:\n  strategy: allInOne\n  allInOne:\n    image: jaegertracing/all-in-one:latest\n  ingress:\n    enabled: true\n    hosts:\n      - jaeger-x.external.ysicing.me\n    annotations:\n      kubernetes.io/ingress.class: traefik\n      traefik.ingress.kubernetes.io/router.entrypoints: websecure\n      traefik.ingress.kubernetes.io/router.tls: "true"\n      traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver\n')),(0,s.kt)("p",null,"\u5c06\u4e0a\u8ff0yaml\u4fdd\u5b58\u4e3a",(0,s.kt)("inlineCode",{parentName:"p"},"jaeger.yaml")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -n observability -f ./observability/jaeger.yaml\n")),(0,s.kt)("ol",{start:5},(0,s.kt)("li",{parentName:"ol"},"\u5b89\u88c5gateway api")),(0,s.kt)("p",null,"\u542f\u7528\u5b9e\u9a8c\u6027 Kubernetes \u7f51\u5173,\u9700\u8981\u63d0\u524d\u5b89\u88c5\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863",(0,s.kt)("a",{parentName:"p",href:"https://doc.traefik.io/traefik/providers/kubernetes-gateway/"},"Traefik & Kubernetes with Gateway API"),",\u540e\u9762\u4e5f\u4f1a\u4e13\u95e8\u4ecb\u7ecd."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=v0.3.0" \\\n| kubectl apply -f -\n')),(0,s.kt)("ol",{start:6},(0,s.kt)("li",{parentName:"ol"},"\u914d\u7f6etraefik value.yaml")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'image:\n  name: traefik\n  tag: ""\n  pullPolicy: IfNotPresent\ndeployment:\n  enabled: true\n  kind: Deployment\n  replicas: 1\n  terminationGracePeriodSeconds: 60\n  minReadySeconds: 0\n  podAnnotations: \n    tke.cloud.tencent.com/networks: "tke-route-eni" # \u5728 VPC-CNI \u4e0e Global Router \u4e24\u79cd\u7f51\u7edc\u6a21\u5f0f\u6df7\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u663e\u793a\u58f0\u660e Pod \u8981\u4f7f\u7528\u5f39\u6027\u7f51\u5361\uff0c\u4e0e\u4ee5\u4e0b eni-ip \u7684 request \u4e0e limit \u4e00\u8d77\u914d\u5408\u4f7f\u7528\n\ningressClass:\n  enabled: true\n  isDefaultClass: true\n\npilot:\n  enabled: false\n\nexperimental:\n  plugins:\n    enabled: true\n  kubernetesGateway:\n    enabled: true\n    appLabelSelector: "traefik"\n\ningressRoute:\n  dashboard:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: traefik\n\nrollingUpdate:\n  maxUnavailable: 1\n  maxSurge: 1\n\n\n#\n# Configure providers\n#\nproviders:\n  kubernetesCRD:\n    enabled: true\n    allowCrossNamespace: true\n    allowExternalNameServices: true\n    ingressClass: traefik\n\n  kubernetesIngress:\n    enabled: true\n    allowExternalNameServices: true\n    publishedService:\n      enabled: true # \u8ba9 Ingress \u7684\u5916\u90e8 IP \u5730\u5740\u72b6\u6001\u663e\u793a\u4e3a Traefik \u7684 LB IP \u5730\u5740\nlogs:\n  general:\n    level: ERROR\n  access:\n    enabled: true\n    filters: \n      # statuscodes: "200,300-302" #\u8bbe\u7f6e\u53ea\u4fdd\u7559\u6307\u5b9a\u72b6\u6001\u7801\u8303\u56f4\u5185\u7684\u8bbf\u95ee\u65e5\u5fd7\n      retryattempts: true # \u8bbe\u7f6e\u4ee3\u7406\u8bbf\u95ee\u91cd\u8bd5\u5931\u8d25\u65f6\uff0c\u4fdd\u7559\u8bbf\u95ee\u65e5\u5fd7\n      minduration: 10ms # \u8bbe\u7f6e\u4fdd\u7559\u8bf7\u6c42\u65f6\u95f4\u8d85\u8fc7\u6307\u5b9a\u6301\u7eed\u65f6\u95f4\u7684\u8bbf\u95ee\u65e5\u5fd7\n    fields:\n      general:\n        defaultmode: keep # \u8bbe\u7f6e\u9ed8\u8ba4\u65e5\u5fd7\u8f93\u51fa\u6a21\u5f0f\uff0ckeep\u8868\u793a\u4fdd\u7559\u6240\u6709\u65e5\u5fd7\u5b57\u6bb5\uff0cdrop\u8868\u793a\u4e0d\u4fdd\u7559\u65e5\u5fd7\u5b57\u6bb5\n        names: \n          ClientUsername: drop\n      headers:\n        defaultmode: keep # \u8bbe\u7f6e Header \u4e2d\u5b57\u6bb5\u662f\u5426\u4fdd\u7559\n        names: \n          User-Agent: redact\n          Authorization: drop\n          Content-Type: keep\n\nmetrics:\n  prometheus:\n    entryPoint: metrics\n\nglobalArguments:\n  - "--global.checknewversion"\n  - "--global.sendanonymoususage"\n\nadditionalArguments: \n   - "--providers.kubernetesingress.ingressclass=traefik"\n   - "--entryPoints.web.proxyProtocol.insecure"\n   - "--api=true"\n   - "--certificatesresolvers.myresolver.acme.email=ysicing@you.mail"\n   - "--certificatesresolvers.myresolver.acme.storage=/data/acme.json"\n  #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"\n   - "--certificatesresolvers.myresolver.acme.tlschallenge=true"\n   - "--certificatesresolvers.myresolver.acme.httpchallenge=true"\n   - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"\n  #- "--certificatesresolvers.myresolver.acme.dnschallenge=false"\n   - "--tracing.jaeger=true"\n   - "--tracing.jaeger.samplingServerURL=http://simplest-agent.observability.svc:5778/sampling"\n   - "--tracing.jaeger.localAgentHostPort=simplest-agent.observability.svc:6831"\n   - "--tracing.jaeger.collector.endpoint=http://simplest-collector.observability.svc:14268/api/traces?format=jaeger.thrift"\n  #- "--log.level=DEBUG"\n\nports:\n  # The name of this one can\'t be changed as it is used for the readiness and\n  # liveness probes, but you can adjust its config to your liking\n  traefik:\n    port: 9000\n    expose: false\n    exposedPort: 9000\n    protocol: TCP\n  web:\n    port: 8000\n    expose: true\n    exposedPort: 80\n    protocol: TCP\n    redirectTo: websecure # http\u91cd\u5b9a\u5411https, \u5185\u7f6e\u4e2d\u95f4\u4ef6\n  websecure:\n    port: 8443\n    expose: true\n    exposedPort: 443\n    protocol: TCP\n    tls: #\u5f00\u542f\u9ed8\u8ba4tls\n      enabled: false\n      # this is the name of a TLSOption definition\n      options: ""\n      certResolver: ""\n      domains: []\n  metrics:\n    port: 9100\n    expose: false\n    exposedPort: 9100\n    protocol: TCP\n\nservice:\n  enabled: true\n  type: LoadBalancer\n  annotations: \n    service.kubernetes.io/tke-existed-lbid: lb-xxx # \u95f2\u7f6eslb id\n    service.cloud.tencent.com/direct-access: "true" # \u7f51\u5173\u7c7b\u7684\u5e94\u7528\u5efa\u8bae\u4f7f\u7528 LB \u76f4\u901a Pod (\u7ed5\u8fc7 NodePort)\u3002\u82e5\u4f7f\u7528 VPC-CNI \u4e0e Global Router \u4e24\u79cd\u7f51\u7edc\u6a21\u5f0f\u6df7\u7528\uff0c\u7528\u6b64\u6ce8\u89e3\u6765\u663e\u793a\u58f0\u660e LB \u76f4\u7ed1 Pod (\u7ed5\u8fc7 NodePort); \u82e5\u521b\u5efa\u96c6\u7fa4\u65f6\u5c31\u9009\u7684 VPC-CNI \u7f51\u7edc\u6a21\u5f0f\uff0c\u5219\u4e0d\u9700\u8981\u663e\u793a\u58f0\u660e (\u9ed8\u8ba4 LB \u76f4\u901a Pod)\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1\u5b98\u65b9\u6587\u6863 https://cloud.tencent.com/document/product/457/48793\n    service.cloud.tencent.com/enable-grace-shutdown: "true"  # \u8868\u793a\u4f7f\u7528\u4f18\u96c5\u505c\u673a\n\npersistence:\n  enabled: true\n  name: data\n#  existingClaim: ""\n  accessMode: ReadWriteOnce\n  size: 128Mi\n  # storageClass: ""\n  path: /data\n  annotations: {}\n  # subPath: "" # only mount a subpath of the Volume into the pod\n\nrbac:\n  enabled: true\n  namespaced: false\npodSecurityPolicy:\n  enabled: false\nresources: \n  requests:\n    cpu: "100m"\n    memory: "50Mi"\n    tke.cloud.tencent.com/eni-ip: "1"\n  limits:\n    cpu: "1000m"\n    memory: "1500Mi"\n    tke.cloud.tencent.com/eni-ip: "1"\naffinity: {}\n\n# host\u9ed8\u8ba4\u9700\u8981\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e0d\u9700\u8981\nsecurityContext:\n  capabilities:\n    drop: [ALL]\n    # add: [NET_BIND_SERVICE]\n  readOnlyRootFilesystem: true\n  runAsGroup: 65532 #0\n  runAsNonRoot: true #false\n  runAsUser: 65532 #0\n\npodSecurityContext:\n  fsGroup: 65532 #0\n')),(0,s.kt)("p",null,"\u5b89\u88c5traefik"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# \u7f16\u8f91\u9ed8\u8ba4\u7684values.yaml\nkubectl create ns traefik-v2\nhelm upgrade -i  --namespace=traefik-v2 traefik ./traefik\n")),(0,s.kt)("h2",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:  whoami\n  namespace: traefik-v2\n  labels:\n    app:  whoami\nspec:\n  selector:\n    matchLabels:\n      app: whoami\n  replicas: 2\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: whoami\n    spec:\n      # initContainers:\n        # Init containers are exactly like regular containers, except:\n          # - Init containers always run to completion.\n          # - Each init container must complete successfully before the next one starts.\n      containers:\n      - name:  whoami\n        image:  traefik/whoami\n        resources:\n          requests:\n            cpu: 100m\n            memory: 100Mi\n          limits:\n            cpu: 100m\n            memory: 100Mi\n        livenessProbe:\n          tcpSocket:\n            port: 80\n          initialDelaySeconds: 5\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 3\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /_status/healthz\n            port: 80\n          initialDelaySeconds: 5\n          timeoutSeconds: 2\n          successThreshold: 1\n          failureThreshold: 3\n          periodSeconds: 10\n        ports:\n        - containerPort:  80\n          name:  whoami\n      restartPolicy: Always\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: whoami\n  namespace: traefik-v2\nspec:\n  selector:\n    app: whoami\n  type: ClusterIP\n  ports:\n  - name: whoami\n    protocol: TCP\n    port: 80\n    targetPort: 80\n---\napiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: whoami\n  namespace: traefik-v2\n  annotations:\n    kubernetes.io/ingress.class: traefik\nspec:\n  entryPoints:\n    - websecure\n  routes:\n  - match: Host(`whoami.internal-pre.ysicing.me`)\n    kind: Rule\n    services:\n    - name: whoami\n      port: 80\n  tls:\n    certResolver: myresolver\n    # secretName: self-tls\n    # \u81ea\u7b7e\u8bc1\u4e66\n    # openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=whoami.internal-pre.ysicing.me"\n    # kubectl create secret tls self-tls --cert=tls.crt --key=tls.key -n traefik-v2\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: whoami\n  namespace: traefik-v2\n  annotations:\n    kubernetes.io/ingress.class: traefik\n    traefik.ingress.kubernetes.io/router.entrypoints: websecure\n    traefik.ingress.kubernetes.io/router.tls: "true"\n    traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver\n    # traefik.ingress.kubernetes.io/router.middlewares: traefik-v2-http2https@kubernetescrd\nspec:\n  rules:\n  - host: whoami2.internal-pre.ysicing.me\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: whoami\n            port:\n              number: 80\n')),(0,s.kt)("p",null,"apply\u5230\u96c6\u7fa4\u8bbf\u95ee\u6d4b\u8bd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-http"},'Hostname: whoami-57fd8795c-4s55f\nIP: 127.0.0.1\nIP: 10.52.37.48\nRemoteAddr: 10.0.16.12:37954\nGET / HTTP/1.1\nHost: whoami2.internal-pre.ysicing.me\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.35 Safari/537.36 Edg/96.0.1054.13\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\nDnt: 1\nSec-Ch-Ua: " Not A;Brand";v="99", "Chromium";v="96", "Microsoft Edge";v="96"\nSec-Ch-Ua-Mobile: ?0\nSec-Ch-Ua-Platform: "macOS"\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: cross-site\nSec-Fetch-User: ?1\nUber-Trace-Id: 2310a2ad4e9d5245:5b38aa949db62245:2310a2ad4e9d5245:1\nUpgrade-Insecure-Requests: 1\nX-Forwarded-For: 101.35.53.4\nX-Forwarded-Host: whoami2.internal-pre.ysicing.me\nX-Forwarded-Port: 443\nX-Forwarded-Proto: https\nX-Forwarded-Server: sh-pre\nX-Real-Ip: 101.35.53.4\n')))}k.isMDXComponent=!0}}]);